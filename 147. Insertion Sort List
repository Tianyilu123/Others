// method 1:
class Solution {
    public ListNode insertionSortList(ListNode head) {
        if(head ==null) return head;
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        ListNode cur = head, prev = null, tmp = null;
        while(cur != null && cur.next != null) {
            if(cur.val > cur.next.val) {
                tmp = cur.next;
                cur.next = tmp.next;
                prev = dummy;
                while(prev.next.val <= tmp.val) {
                    prev = prev.next;
                }
                tmp.next = prev.next;
                prev.next = tmp;
            }
            else {
                cur = cur.next;
            }
        }
        return dummy.next;
    }
}


// method 2:
class Solution {
    public ListNode insertionSortList(ListNode head) {
        ListNode tHead = new ListNode(0), p = head;
        while(p != null) {
            ListNode t = p.next;
            ListNode prev = tHead;
            ListNode pp = prev.next;
            while(pp != null && p.val > pp.val) {
                prev = prev.next;
                pp = pp.next;
            }
            prev.next = p;
            p.next = pp;
            
            p = t;
        }
        return tHead.next;
    }
}
